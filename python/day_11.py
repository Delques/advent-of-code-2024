from utils_aoc import get_filepath_input

FACTOR = 2024
GENERATIONS_1, GENERATIONS_2 = 25, 75

with open(get_filepath_input(), "r") as file:
    stones = map(int, file.read().strip().split())


def get_next_elements(stone: int) -> tuple[int]:
    """
    Get the stone(s) generated by a given stone value for the next
    generation.
    """

    if not (size := len(char := repr(stone))) % 2:
        return (
            int(char[: size // 2]),
            int(char[(size // 2) :]),
        )
    return (stone * FACTOR,)


def generate_next_count_elements(
    count_elements: dict[int, int], next_elements: dict[int, tuple[int]]
) -> None:
    """
    Get the next count of instances for each stone value based on
    the input generation's current state.
    """

    for stone, count in tuple(count_elements.items())[:]:
        if stone not in next_elements:
            next_elements[stone] = get_next_elements(stone)

        for el in next_elements[stone]:
            if el not in count_elements:
                count_elements[el] = 0
            count_elements[el] += count

        count_elements[stone] -= count
        if not count_elements[stone]:
            del count_elements[stone]


def get_count_stones(
    count_elements: dict[int, int],
    next_elements: dict[int, tuple[int]],
    generations: int,
) -> int:
    """
    Get the number of stones after a given number of generations. This
    modifies input objects by reference.
    """

    for _ in range(generations):
        generate_next_count_elements(count_elements, next_elements)
    return sum(count for count in count_elements.values())


next_elements: dict[int, tuple[int]] = {0: (1,)}
count_elements: dict[int, int] = {k: 1 for k in stones}

print(
    get_count_stones(count_elements, next_elements, generations=GENERATIONS_1)
)  # Part 1

# Use the same objects from Part 1 as for Part 2, and run for 50 more gens
print(
    get_count_stones(
        count_elements,
        next_elements,
        generations=GENERATIONS_2 - GENERATIONS_1,
    )
)  # Part 2
